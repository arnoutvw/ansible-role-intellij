---
- name: include OS family specific vars
  with_first_found:
    - '../vars/os-families/{{ ansible_os_family }}.yml'
    - ../vars/os-families/default.yml
  include_vars: '{{ item }}'

- name: assert edition vars
  assert:
    that:
      - "intellij_edition in ('community', 'ultimate')"

- name: load edition vars
  include_vars: '../vars/editions/{{ intellij_edition }}.yml'

- name: load version vars
  with_first_found:
    - '../vars/versions/{{ intellij_version }}-{{ intellij_edition }}.yml'
    - ../vars/versions/default.yml
  include_vars: '{{ item }}'

- name: assert version vars
  assert:
    that:
      - "intellij_redis_sha256sum not in (None, '')"

- name: install dependencies
  become: yes
  when: ansible_os_family != 'Darwin'
  package:
    name: '{{ intellij_dependencies }}'
    state: present

- name: create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ intellij_download_dir }}'

- name: stat install dir
  when: ansible_os_family != 'Darwin'
  stat:
    path: '{{ intellij_install_dir }}/bin'
  register: stat_install_dir

- name: stat install dir
  when: ansible_os_family == 'Darwin'
  stat:
    path: '{{ intellij_install_dir }}/{{ intellij_app_name }}.app'
  register: stat_install_dir

- name: download IntelliJ IDEA
  get_url:
    url: '{{ intellij_mirror }}/{{ intellij_redis_filename }}'
    dest: '{{ intellij_download_dir }}/{{ intellij_redis_filename }}'
    checksum: 'sha256:{{ intellij_redis_sha256sum }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    timeout: '{{ intellij_idea_download_timeout_seconds }}'
    mode: 'u=rw,go=r'
  when: not stat_install_dir.stat.exists is defined

- name: create IntelliJ IDEA installation directory
  when: ansible_os_family != 'Darwin'
  become: yes
  file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: '{{ intellij_install_dir }}'

- name: install IntelliJ IDEA
  become: yes
  when: ansible_os_family != 'Darwin'
  unarchive:
    src: '{{ intellij_download_dir }}/{{ intellij_redis_filename }}'
    remote_src: yes
    extra_opts: '--strip-components=1'
    dest: '{{ intellij_install_dir }}'
    owner: root
    group: root
    mode: 'o-w'
    creates: '{{ intellij_install_dir }}/bin'

- name: create bin link
  when: ansible_os_family != 'Darwin'
  become: yes
  file:
    src: '{{ intellij_install_dir }}/bin/idea.sh'
    dest: /usr/local/bin/idea
    state: link
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: install IntelliJ IDEA desktop file
  become: yes
  when: ansible_os_family != 'Darwin'
  template:
    src: jetbrains-idea.desktop.j2
    dest: '/usr/share/applications/{{ intellij_desktop_filename }}'
    owner: root
    group: root
    mode: 'u=rw,go=r'

## OSX
- name: Create tmp dir as dmg mounting point;
  file:
    path: ./tmp/
    mode: 'u=rwx,go=rx'
    state: directory
  when: not stat_install_dir.stat.exists is defined and ansible_os_family == 'Darwin'

- name: Mount dmg to tmp dir
  command: hdiutil attach '{{ intellij_download_dir }}/{{ intellij_redis_filename }}' -nobrowse -mountpoint ./tmp/{{ intellij_app_name }}
  when: not stat_install_dir.stat.exists is defined and ansible_os_family == 'Darwin'

- name: Copy app to Applications.
  shell: cp -aR ./tmp/{{ intellij_app_name }}/*.app /Applications/{{ intellij_app_name }}.app
  when: not stat_install_dir.stat.exists is defined and ansible_os_family == 'Darwin'

- name: Unmount dmg
  command: hdiutil detach ./tmp/{{ intellij_app_name }}/
  when: not stat_install_dir.stat.exists is defined and ansible_os_family == 'Darwin'

- name: Remove tmp mounting dir
  file:
    path: ./tmp/
    state: absent
    when: not stat_install_dir.stat.exists
  when: not stat_install_dir.stat.exists is defined and ansible_os_family == 'Darwin'

- name: install Ansible facts.d directory (Linux)
  become: yes
  when: ansible_os_family != 'Darwin'
  file:
    state: directory
    dest: /etc/ansible/facts.d
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: install IntelliJ facts (Linux)
  become: yes
  when: ansible_os_family != 'Darwin'
  template:
    src: facts.j2
    dest: /etc/ansible/facts.d/intellij.fact
    owner: root
    group: root
    mode: 'u=rw,go=r'

- name: install Ansible facts.d directory (OSX)
  become: yes
  when: ansible_os_family == 'Darwin'
  file:
    state: directory
    dest: /etc/ansible/facts.d
    owner: root
    group: wheel
    mode: 'u=rwx,go=rx'

- name: install IntelliJ facts (OSX)
  become: yes
  when: ansible_os_family == 'Darwin'
  template:
    src: facts.j2
    dest: /etc/ansible/facts.d/intellij.fact
    owner: root
    group: wheel
    mode: 'u=rw,go=r'

- name: re-read facts
  setup: filter=ansible_local
